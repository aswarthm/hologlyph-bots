#!/usr/bin/env python3
#######################################     DO NOT MODIFY THIS  FILE     ##########################################

import numpy as np
import matplotlib.pyplot as plt
from my_robot_interfaces.srv import NextGoal             
import rclpy
from rclpy.node import Node  
import random
import time
from my_robot_interfaces.msg import Goal           
from my_robot_interfaces.msg import Shape           


class ServiceNode(Node):

    def __init__(self):
        super().__init__('service_node')

        self.publish_goal_1 = self.create_publisher(Goal, 'hb_bot_1/goal', 10)
        self.publish_goal_2 = self.create_publisher(Goal, 'hb_bot_2/goal', 10)
        self.publish_goal_3 = self.create_publisher(Goal, 'hb_bot_3/goal', 10)
        
        self.timer = self.create_timer(5.0, self.publish_shapes)

    def publish_shapes(self):

        tri_side_length = np.random.randint(50, 90)
        sq_side_length  = np.random.randint(50, 90)
        dec_side_length = np.random.randint(50, 80)

        tri_theta = 0.0 #np.random.uniform(0, 2*np.pi)
        sq_theta  = 0.0 #np.random.uniform(0, 2*np.pi)
        dec_theta = 0.0 #np.random.uniform(0, 2*np.pi)

        shape1_x, shape1_y, shape1_theta  = generate_triangle(tri_side_length, 300, 200, tri_theta, 100)
        shape2_x, shape2_y, shape2_theta  = generate_square(sq_side_length, 150, 250, sq_theta, 100)
        shape3_x, shape3_y, shape3_theta  = generate_decagon(dec_side_length, 320, 380, dec_theta, 100)

        msg_bot_1 = Goal()
        msg_bot_2 = Goal()
        msg_bot_3 = Goal()

        msg_bot_1.bot_id = 1
        msg_bot_1.x =[397.0, 450.0, 449.96953902999996, 449.8781654, 449.72590694999997, 449.51281005, 449.23893962, 448.90437907, 448.50923033000004, 448.05361375, 447.53766812000003, 446.9615506, 446.32543669, 445.62952014999996, 444.87401295999996, 444.05914526000004, 443.18516525999996, 442.25233919, 441.26095119, 440.21130326, 439.10371512, 437.93852416, 436.71608530000003, 435.43677091, 434.10097069, 432.70909153, 431.26155741, 429.75880926, 428.20130484000003, 426.58951857, 424.92394143, 423.20508076, 421.43346013999997, 419.60961923, 417.73411359, 415.80751451000003, 413.83040886000003, 411.80339887, 409.72710201, 407.60215072, 405.42919229, 403.20888862000004, 400.94191604, 398.62896509999996, 396.27074031999996, 393.86796007, 391.42135624, 388.93167409, 386.39967201, 383.82612127, 381.2118058, 378.55752194, 375.86407821, 373.13229507, 370.36300463, 367.55705046, 364.71528727, 361.83858069, 358.92780700000003, 355.98385285, 353.00761497999997, 350.0, 346.96192405, 343.89431256, 340.79809995, 337.67422936, 334.52365235, 331.34732862, 328.1462257, 324.92131868, 321.67358991000003, 318.40402867, 315.11363088999997, 311.80339887, 308.47434094, 305.12747116, 301.76380902, 298.38437912, 294.99021087, 291.58233816, 288.16179908, 284.72963553, 281.28689301, 277.83462019, 274.37386868, 270.90569265, 267.43114855, 263.95129475, 260.46719125, 256.97989934, 253.49048129, 250.0, 246.50951871, 243.02010066, 239.53280875, 236.04870525, 232.56885145, 229.09430735, 225.62613132, 222.16537981, 218.71310699, 215.27036447, 211.83820092, 208.41766184, 205.00978913, 201.61562088, 198.23619098, 194.87252884, 191.52565906, 188.19660113, 184.88636911, 181.59597133, 178.32641009, 175.07868132, 171.8537743, 168.65267138000002, 165.47634764999998, 162.32577064, 159.20190005, 156.10568744, 153.03807595, 150.0]
        msg_bot_1.y =[455.0, 250.0, 260.46347106, 270.87596514, 281.18675362, 291.34560337, 301.3030215, 311.01049646, 320.42073442000003, 329.48788963, 338.16778784, 346.41814145, 354.19875557, 361.47172381999997, 368.20161304, 374.35563588, 379.90381057, 384.81910694, 389.07757819, 392.65847744, 395.54435894, 397.72116295, 399.17828431, 399.90862404999996, 399.90862404999996, 399.17828431, 397.72116295, 395.54435894, 392.65847744, 389.07757819, 384.81910694, 379.90381057, 374.35563588, 368.20161304, 361.47172381999997, 354.19875557, 346.41814145, 338.16778784, 329.48788963, 320.42073442000003, 311.01049646, 301.3030215, 291.34560337, 281.18675362, 270.87596514, 260.46347106, 250.0, 239.53652894, 229.12403486, 218.81324638, 208.65439663, 198.6969785, 188.98950354, 179.57926558, 170.51211037000002, 161.83221215999998, 153.58185855, 145.80124443, 138.52827618, 131.79838696000002, 125.64436412, 120.09618943000001, 115.18089305999999, 110.92242181, 107.34152255999999, 104.45564106, 102.27883704999999, 100.82171568999999, 100.09137595000001, 100.09137595000001, 100.82171568999999, 102.27883704999999, 104.45564106, 107.34152255999999, 110.92242181, 115.18089305999999, 120.09618943000001, 125.64436412, 131.79838696000002, 138.52827618, 145.80124443, 153.58185855, 161.83221215999998, 170.51211037000002, 179.57926558, 188.98950354, 198.6969785, 208.65439663, 218.81324638, 229.12403486, 239.53652894, 250.0, 260.46347106, 270.87596514, 281.18675362, 291.34560337, 301.3030215, 311.01049646, 320.42073442000003, 329.48788963, 338.16778784, 346.41814145, 354.19875557, 361.47172381999997, 368.20161304, 374.35563588, 379.90381057, 384.81910694, 389.07757819, 392.65847744, 395.54435894, 397.72116295, 399.17828431, 399.90862404999996, 399.90862404999996, 399.17828431, 397.72116295, 395.54435894, 392.65847744, 389.07757819, 384.81910694, 379.90381057]
        msg_bot_1.theta = shape1_theta



        msg_bot_2.bot_id = 2
        msg_bot_2.x =[243.0, 150.0, 146.99238502, 144.01614715, 141.072193, 138.16141930999999, 135.28471273, 132.44294954, 129.63699537, 126.86770493, 124.13592179, 121.44247806000001, 118.78819419999999, 116.17387873000001, 113.60032799000001, 111.06832591, 108.57864376, 106.13203992999999, 103.72925968000001, 101.37103490000001, 99.05808396, 96.79111137999999, 94.57080771, 92.39784928, 90.27289798999999, 88.19660113, 86.16959114, 84.19248549, 82.26588641000001, 80.39038077000001, 78.56653986, 76.79491924000001, 75.07605856999999, 73.41048143, 71.79869516, 70.24119074000001, 68.73844259, 67.29090847, 65.89902931, 64.56322909, 63.2839147, 62.061475840000014, 60.896284879999996, 59.788696740000006, 58.739048810000014, 57.74766081000001, 56.81483474000001, 55.94085473999999, 55.12598704000001, 54.37047985000001, 53.674563309999996, 53.03844939999999, 52.462331879999994, 51.94638624999999, 51.49076966999999, 51.095620929999995, 50.76106038, 50.48718994999999, 50.274093050000005, 50.1218346, 50.03046097000001, 50.0, 50.03046097000001, 50.1218346, 50.274093050000005, 50.48718994999999, 50.76106038, 51.095620929999995, 51.49076966999999, 51.94638624999999, 52.462331879999994, 53.03844939999999, 53.674563309999996, 54.37047985000001, 55.12598704000001, 55.94085473999999, 56.81483474000001, 57.74766081000001, 58.739048810000014, 59.788696740000006, 60.896284879999996, 62.061475840000014, 63.2839147, 64.56322909, 65.89902931, 67.29090847, 68.73844259, 70.24119074000001, 71.79869516, 73.41048143, 75.07605856999999, 76.79491924000001, 78.56653986, 80.39038077000001, 82.26588641000001, 84.19248549, 86.16959114, 88.19660113, 90.27289798999999, 92.39784928, 94.57080771, 96.79111137999999, 99.05808396, 101.37103490000001, 103.72925968000001, 106.13203992999999, 108.57864376, 111.06832591, 113.60032799000001, 116.17387873000001, 118.78819419999999, 121.44247806000001, 124.13592179, 126.86770493, 129.63699537, 132.44294954, 135.28471273, 138.16141930999999, 141.072193, 144.01614715, 146.99238502, 150.0]
        msg_bot_2.y =[448.0, 379.90381057, 374.35563588, 368.20161304, 361.47172381999997, 354.19875557, 346.41814145, 338.16778784, 329.48788963, 320.42073442000003, 311.01049646, 301.3030215, 291.34560337, 281.18675362, 270.87596514, 260.46347106, 250.0, 239.53652894, 229.12403486, 218.81324638, 208.65439663, 198.6969785, 188.98950354, 179.57926558, 170.51211037000002, 161.83221215999998, 153.58185855, 145.80124443, 138.52827618, 131.79838696000002, 125.64436412, 120.09618943000001, 115.18089305999999, 110.92242181, 107.34152255999999, 104.45564106, 102.27883704999999, 100.82171568999999, 100.09137595000001, 100.09137595000001, 100.82171568999999, 102.27883704999999, 104.45564106, 107.34152255999999, 110.92242181, 115.18089305999999, 120.09618943000001, 125.64436412, 131.79838696000002, 138.52827618, 145.80124443, 153.58185855, 161.83221215999998, 170.51211037000002, 179.57926558, 188.98950354, 198.6969785, 208.65439663, 218.81324638, 229.12403486, 239.53652894, 250.0, 260.46347106, 270.87596514, 281.18675362, 291.34560337, 301.3030215, 311.01049646, 320.42073442000003, 329.48788963, 338.16778784, 346.41814145, 354.19875557, 361.47172381999997, 368.20161304, 374.35563588, 379.90381057, 384.81910694, 389.07757819, 392.65847744, 395.54435894, 397.72116295, 399.17828431, 399.90862404999996, 399.90862404999996, 399.17828431, 397.72116295, 395.54435894, 392.65847744, 389.07757819, 384.81910694, 379.90381057, 374.35563588, 368.20161304, 361.47172381999997, 354.19875557, 346.41814145, 338.16778784, 329.48788963, 320.42073442000003, 311.01049646, 301.3030215, 291.34560337, 281.18675362, 270.87596514, 260.46347106, 250.0, 239.53652894, 229.12403486, 218.81324638, 208.65439663, 198.6969785, 188.98950354, 179.57926558, 170.51211037000002, 161.83221215999998, 153.58185855, 145.80124443, 138.52827618, 131.79838696000002, 125.64436412, 120.09618943000001]
        msg_bot_2.theta = shape2_theta



        msg_bot_3.bot_id = 3
        msg_bot_3.x =[93.0, 150.0, 153.03807595, 156.10568744, 159.20190005, 162.32577064, 165.47634764999998, 168.65267138000002, 171.8537743, 175.07868132, 178.32641009, 181.59597133, 184.88636911, 188.19660113, 191.52565906, 194.87252884, 198.23619098, 201.61562088, 205.00978913, 208.41766184, 211.83820092, 215.27036447, 218.71310699, 222.16537981, 225.62613132, 229.09430735, 232.56885145, 236.04870525, 239.53280875, 243.02010066, 246.50951871, 250.0, 253.49048129, 256.97989934, 260.46719125, 263.95129475, 267.43114855, 270.90569265, 274.37386868, 277.83462019, 281.28689301, 284.72963553, 288.16179908, 291.58233816, 294.99021087, 298.38437912, 301.76380902, 305.12747116, 308.47434094, 311.80339887, 315.11363088999997, 318.40402867, 321.67358991000003, 324.92131868, 328.1462257, 331.34732862, 334.52365235, 337.67422936, 340.79809995, 343.89431256, 346.96192405, 350.0, 353.00761497999997, 355.98385285, 358.92780700000003, 361.83858069, 364.71528727, 367.55705046, 370.36300463, 373.13229507, 375.86407821, 378.55752194, 381.2118058, 383.82612127, 386.39967201, 388.93167409, 391.42135624, 393.86796007, 396.27074031999996, 398.62896509999996, 400.94191604, 403.20888862000004, 405.42919229, 407.60215072, 409.72710201, 411.80339887, 413.83040886000003, 415.80751451000003, 417.73411359, 419.60961923, 421.43346013999997, 423.20508076, 424.92394143, 426.58951857, 428.20130484000003, 429.75880926, 431.26155741, 432.70909153, 434.10097069, 435.43677091, 436.71608530000003, 437.93852416, 439.10371512, 440.21130326, 441.26095119, 442.25233919, 443.18516525999996, 444.05914526000004, 444.87401295999996, 445.62952014999996, 446.32543669, 446.9615506, 447.53766812000003, 448.05361375, 448.50923033000004, 448.90437907, 449.23893962, 449.51281005, 449.72590694999997, 449.8781654, 449.96953902999996, 450.0]
        msg_bot_3.y =[440.0, 120.09618943000001, 115.18089305999999, 110.92242181, 107.34152255999999, 104.45564106, 102.27883704999999, 100.82171568999999, 100.09137595000001, 100.09137595000001, 100.82171568999999, 102.27883704999999, 104.45564106, 107.34152255999999, 110.92242181, 115.18089305999999, 120.09618943000001, 125.64436412, 131.79838696000002, 138.52827618, 145.80124443, 153.58185855, 161.83221215999998, 170.51211037000002, 179.57926558, 188.98950354, 198.6969785, 208.65439663, 218.81324638, 229.12403486, 239.53652894, 250.0, 260.46347106, 270.87596514, 281.18675362, 291.34560337, 301.3030215, 311.01049646, 320.42073442000003, 329.48788963, 338.16778784, 346.41814145, 354.19875557, 361.47172381999997, 368.20161304, 374.35563588, 379.90381057, 384.81910694, 389.07757819, 392.65847744, 395.54435894, 397.72116295, 399.17828431, 399.90862404999996, 399.90862404999996, 399.17828431, 397.72116295, 395.54435894, 392.65847744, 389.07757819, 384.81910694, 379.90381057, 374.35563588, 368.20161304, 361.47172381999997, 354.19875557, 346.41814145, 338.16778784, 329.48788963, 320.42073442000003, 311.01049646, 301.3030215, 291.34560337, 281.18675362, 270.87596514, 260.46347106, 250.0, 239.53652894, 229.12403486, 218.81324638, 208.65439663, 198.6969785, 188.98950354, 179.57926558, 170.51211037000002, 161.83221215999998, 153.58185855, 145.80124443, 138.52827618, 131.79838696000002, 125.64436412, 120.09618943000001, 115.18089305999999, 110.92242181, 107.34152255999999, 104.45564106, 102.27883704999999, 100.82171568999999, 100.09137595000001, 100.09137595000001, 100.82171568999999, 102.27883704999999, 104.45564106, 107.34152255999999, 110.92242181, 115.18089305999999, 120.09618943000001, 125.64436412, 131.79838696000002, 138.52827618, 145.80124443, 153.58185855, 161.83221215999998, 170.51211037000002, 179.57926558, 188.98950354, 198.6969785, 208.65439663, 218.81324638, 229.12403486, 239.53652894, 250.0]
        msg_bot_3.theta = shape3_theta



        # msg_shape_info = Shape()
        # msg_shape_info.shape_dimension = [tri_side_length, sq_side_length, dec_side_length]
        # msg_shape_info.shape_theta = [tri_theta, sq_theta, dec_theta]

        self.publish_goal_1.publish(msg_bot_1)
        self.publish_goal_2.publish(msg_bot_2)
        self.publish_goal_3.publish(msg_bot_3)


def generate_decagon(side_length, x_center, y_center, theta, num_points):
    angles = np.linspace(0, 2 * np.pi, 10, endpoint=False) + theta
    x_vertices = x_center + side_length * np.cos(angles)
    y_vertices = y_center + side_length * np.sin(angles)
    
    x_points = np.linspace(x_vertices[-1], x_vertices[0], num_points)
    y_points = np.linspace(y_vertices[-1], y_vertices[0], num_points)
    
    x_interp = np.interp(np.linspace(0, 1, num_points), np.linspace(0, 1, 10), x_vertices)
    y_interp = np.interp(np.linspace(0, 1, num_points), np.linspace(0, 1, 10), y_vertices)
    
    return x_interp.tolist(), y_interp.tolist(), theta

def generate_triangle(side_length, x_center, y_center, theta, num_points):

    height = (np.sqrt(3) / 2) * side_length
    
    x_vertices = np.array([0, side_length / 2, -side_length / 2, 0])
    y_vertices = np.array([height / 2, -height / 2, -height / 2, height / 2])
    
    x_rot = x_vertices * np.cos(theta) - y_vertices * np.sin(theta)
    y_rot = x_vertices * np.sin(theta) + y_vertices * np.cos(theta)
    
    x = x_center + x_rot
    y = y_center + y_rot
    
    x_left = np.linspace(x[2], x[0], num_points // 3)
    y_left = np.linspace(y[2], y[0], num_points // 3)
    x_right = np.linspace(x[0], x[1], num_points // 3)
    y_right = np.linspace(y[0], y[1], num_points // 3)
    x_bottom = np.linspace(x[1], x[2], num_points // 3)
    y_bottom = np.linspace(y[1], y[2], num_points // 3)
    
    x = np.concatenate((x_left, x_right[1:], x_bottom[1:]))
    y = np.concatenate((y_left, y_right[1:], y_bottom[1:]))
    
    return x.tolist(), y.tolist(), theta

def generate_square(side_length, x_center, y_center, theta, num_points):
    half_length = side_length / 2
    
    x_vertices = np.array([-half_length, half_length, half_length, -half_length, -half_length])
    y_vertices = np.array([-half_length, -half_length, half_length, half_length, -half_length])
    
    x_rot = x_vertices * np.cos(theta) - y_vertices * np.sin(theta)
    y_rot = x_vertices * np.sin(theta) + y_vertices * np.cos(theta)
    
    x = x_center + x_rot
    y = y_center + y_rot
    
    x_left = np.linspace(x[3], x[0], num_points // 4)
    y_left = np.linspace(y[3], y[0], num_points // 4)
    x_top = np.linspace(x[0], x[1], num_points // 4)
    y_top = np.linspace(y[0], y[1], num_points // 4)
    x_right = np.linspace(x[1], x[2], num_points // 4)
    y_right = np.linspace(y[1], y[2], num_points // 4)
    x_bottom = np.linspace(x[2], x[3], num_points // 4)
    y_bottom = np.linspace(y[2], y[3], num_points // 4)
    
    x = np.concatenate((x_left, x_top[1:], x_right[1:], x_bottom[1:]))
    y = np.concatenate((y_left, y_top[1:], y_right[1:], y_bottom[1:]))
    
    return x.tolist(), y.tolist(), theta



def main(args=None):
    rclpy.init(args=args)
    service_node = ServiceNode()

    rclpy.spin(service_node)
    rclpy.shutdown()


if __name__ == '__main__':
    main()

#######################################     DO NOT MODIFY THIS  FILE     ##########################################